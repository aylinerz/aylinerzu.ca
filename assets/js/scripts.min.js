/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
!function(t,a,n,e){"use strict";var s={canvas1:n.getElementById("canvas1"),canvas2:n.getElementById("canvas2"),activeCanvas:!0,setBackground:function(){var n=Trianglify({width:a.innerWidth,height:a.innerHeight,x_colors:this.getColor(),variance:.9,cell_size:Math.floor(10*Math.random()+60)});this.activeCanvas?(n.canvas(this.canvas1),t("#canvas2").fadeOut(3e3),this.activeCanvas=!1):(n.canvas(this.canvas2),t("#canvas2").fadeIn(3e3),this.activeCanvas=!0)},getColor:function(){var t=["YlGn","Greys","Blues","RdPu","PuBuGn","Purples","PuOr"];return t[Math.floor(Math.random()*t.length)]},init:function(){var t=this;this.setBackground(),setInterval(function(){t.setBackground()},7e3)},resize:function(){}};if(s.init(),t(".js-scroll").length){new PerfectScrollbar(".js-scroll")}if(t(".js-count").length){var i={strings:["5th","5th","7th","8th","9th","10th","11th","12th","13th","14th+ (I've lost count)"],typeSpeed:90,backSpeed:80,backDelay:1200,startDelay:14e3};new Typed(".js-count",i)}t(".cards").isotope({itemSelector:".cards__card",percentPosition:!0,masonry:{columnWidth:".cards__card-sizer",gutter:5}});t("#js-forms").length&&(t("#js-forms .cards__card__inputs-input").on("click focus",function(){t(this).addClass("active")}),t("#js-forms .cards__card__inputs-input").on("focusout",function(){""==t(this).val()&&t(this).removeClass("active")})),t(a).resize(function(){s.resize()})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwicGF0dGVybnMiLCJjYW52YXMxIiwiZ2V0RWxlbWVudEJ5SWQiLCJjYW52YXMyIiwiYWN0aXZlQ2FudmFzIiwic2V0QmFja2dyb3VuZCIsInBhdHRlcm4iLCJUcmlhbmdsaWZ5Iiwid2lkdGgiLCJpbm5lcldpZHRoIiwiaGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJ4X2NvbG9ycyIsInRoaXMiLCJnZXRDb2xvciIsInZhcmlhbmNlIiwiY2VsbF9zaXplIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY2FudmFzIiwiZmFkZU91dCIsImZhZGVJbiIsImNvbG9ycyIsImxlbmd0aCIsImluaXQiLCJzZWxmIiwic2V0SW50ZXJ2YWwiLCJyZXNpemUiLCJQZXJmZWN0U2Nyb2xsYmFyIiwib3B0aW9ucyIsInN0cmluZ3MiLCJ0eXBlU3BlZWQiLCJiYWNrU3BlZWQiLCJiYWNrRGVsYXkiLCJzdGFydERlbGF5IiwiVHlwZWQiLCJpc290b3BlIiwiaXRlbVNlbGVjdG9yIiwicGVyY2VudFBvc2l0aW9uIiwibWFzb25yeSIsImNvbHVtbldpZHRoIiwiZ3V0dGVyIiwib24iLCJhZGRDbGFzcyIsInZhbCIsInJlbW92ZUNsYXNzIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztDQUFBLFNBQUFBLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0EsWUFHQSxJQUFBQyxJQUNBQyxRQUFBSCxFQUFBSSxlQUFBLFdBQ0FDLFFBQUFMLEVBQUFJLGVBQUEsV0FDQUUsY0FBQSxFQUVBQyxjQUFBLFdBQ0EsR0FBQUMsR0FBQUMsWUFDQUMsTUFBQVgsRUFBQVksV0FDQUMsT0FBQWIsRUFBQWMsWUFDQUMsU0FBQUMsS0FBQUMsV0FDQUMsU0FBQSxHQUNBQyxVQUFBQyxLQUFBQyxNQUFBLEdBQUFELEtBQUFFLFNBQUEsS0FHQU4sTUFBQVQsY0FDQUUsRUFBQWMsT0FBQVAsS0FBQVosU0FDQUwsRUFBQSxZQUFBeUIsUUFBQSxLQUNBUixLQUFBVCxjQUFBLElBRUFFLEVBQUFjLE9BQUFQLEtBQUFWLFNBQ0FQLEVBQUEsWUFBQTBCLE9BQUEsS0FDQVQsS0FBQVQsY0FBQSxJQUdBVSxTQUFBLFdBQ0EsR0FBQVMsSUFBQSxPQUFBLFFBQUEsUUFBQSxPQUFBLFNBQUEsVUFBQSxPQUNBLE9BQUFBLEdBQUFOLEtBQUFDLE1BQUFELEtBQUFFLFNBQUFJLEVBQUFDLFVBRUFDLEtBQUEsV0FDQSxHQUFBQyxHQUFBYixJQUNBQSxNQUFBUixnQkFDQXNCLFlBQUEsV0FDQUQsRUFBQXJCLGlCQUNBLE1BRUF1QixPQUFBLGFBZUEsSUFMQTVCLEVBQUF5QixPQUtBN0IsRUFBQSxjQUFBNEIsT0FDQSxDQUFBLEdBQUFLLGtCQUFBLGNBR0EsR0FBQWpDLEVBQUEsYUFBQTRCLE9BQ0EsQ0FBQSxHQUFBTSxJQUNBQyxTQUFBLE1BQUEsTUFBQSxNQUFBLE1BQUEsTUFBQSxPQUFBLE9BQUEsT0FBQSxPQUFBLDJCQUNBQyxVQUFBLEdBQ0FDLFVBQUEsR0FDQUMsVUFBQSxLQUNBQyxXQUFBLEtBRUEsSUFBQUMsT0FBQSxZQUFBTixHQVFBbEMsRUFBQSxVQUFBeUMsU0FDQUMsYUFBQSxlQUNBQyxpQkFBQSxFQUNBQyxTQUNBQyxZQUFBLHFCQUNBQyxPQUFBLElBS0E5QyxHQUFBLGFBQUE0QixTQUVBNUIsRUFBQSx3Q0FBQStDLEdBQUEsY0FBQSxXQUNBL0MsRUFBQWlCLE1BQUErQixTQUFBLFlBRUFoRCxFQUFBLHdDQUFBK0MsR0FBQSxXQUFBLFdBQ0EsSUFBQS9DLEVBQUFpQixNQUFBZ0MsT0FDQWpELEVBQUFpQixNQUFBaUMsWUFBQSxhQU9BbEQsRUFBQUMsR0FBQStCLE9BQUEsV0FDQTVCLEVBQUE0QixZQUdBbUIsT0FBQWxELE9BQUFDIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcclxuICAndXNlIHN0cmljdCc7XHJcblxyXG5cclxuICAgICAgdmFyIHBhdHRlcm5zID0ge1xyXG4gICAgICAgICAgY2FudmFzMSA6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzMVwiKSxcclxuICAgICAgICAgIGNhbnZhczIgOiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXMyXCIpLFxyXG4gICAgICAgICAgYWN0aXZlQ2FudmFzIDogdHJ1ZSxcclxuXHJcbiAgICAgICAgICBzZXRCYWNrZ3JvdW5kIDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgIHZhciBwYXR0ZXJuID0gVHJpYW5nbGlmeSh7XHJcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcclxuICAgICAgICAgICAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXHJcbiAgICAgICAgICAgICAgICAgIHhfY29sb3JzOiB0aGlzLmdldENvbG9yKCksXHJcbiAgICAgICAgICAgICAgICAgIHZhcmlhbmNlOiAwLjksXHJcbiAgICAgICAgICAgICAgICAgIGNlbGxfc2l6ZTogTWF0aC5mbG9vcigoTWF0aC5yYW5kb20oKSAqIDEwKSArIDYwKSxcclxuICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgaWYgKHRoaXMuYWN0aXZlQ2FudmFzKSB7XHJcbiAgICAgICAgICAgICAgICAgIHBhdHRlcm4uY2FudmFzKHRoaXMuY2FudmFzMSk7XHJcbiAgICAgICAgICAgICAgICAgICQoXCIjY2FudmFzMlwiKS5mYWRlT3V0KDMwMDApO1xyXG4gICAgICAgICAgICAgICAgICB0aGlzLmFjdGl2ZUNhbnZhcyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgIHBhdHRlcm4uY2FudmFzKHRoaXMuY2FudmFzMik7XHJcbiAgICAgICAgICAgICAgICAgICQoXCIjY2FudmFzMlwiKS5mYWRlSW4oMzAwMCk7XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlQ2FudmFzID0gdHJ1ZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZ2V0Q29sb3I6IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgdmFyIGNvbG9ycyA9IFtcIllsR25cIiwgJ0dyZXlzJywgJ0JsdWVzJywgJ1JkUHUnLCAnUHVCdUduJywgJ1B1cnBsZXMnLCAnUHVPciddXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sb3JzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNvbG9ycy5sZW5ndGgpXVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgICAgICB0aGlzLnNldEJhY2tncm91bmQoKVxyXG4gICAgICAgICAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICBzZWxmLnNldEJhY2tncm91bmQoKVxyXG4gICAgICAgICAgICAgIH0sIDcwMDApXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgcmVzaXplOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAvLyB0aGlzLmNhbnZhczEuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgICAgICAgICAgIC8vIHRoaXMuY2FudmFzMS53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG4gICAgICAgICAgICAgIC8vIHRoaXMuY2FudmFzMi5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcbiAgICAgICAgICAgICAgLy8gdGhpcy5jYW52YXMyLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcblxyXG5cclxuICAgICAgcGF0dGVybnMuaW5pdCgpO1xyXG5cclxuXHJcblxyXG4gICAgLy8gaW5pdCBzY3JvbGxiYXIgaW4gYWJvdXQgcGFnZVxyXG4gICAgaWYoJChcIi5qcy1zY3JvbGxcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgY29uc3QgcHMgPSBuZXcgUGVyZmVjdFNjcm9sbGJhcignLmpzLXNjcm9sbCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKCQoXCIuanMtY291bnRcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIHN0cmluZ3M6IFtcIjV0aFwiLCBcIjV0aFwiLCBcIjd0aFwiLCBcIjh0aFwiLCBcIjl0aFwiLCBcIjEwdGhcIiwgXCIxMXRoXCIsIFwiMTJ0aFwiLCBcIjEzdGhcIiwgXCIxNHRoKyAoSSd2ZSBsb3N0IGNvdW50KVwiXSxcclxuICAgICAgICAgICAgdHlwZVNwZWVkOiA5MCxcclxuICAgICAgICAgICAgYmFja1NwZWVkOiA4MCxcclxuICAgICAgICAgICAgYmFja0RlbGF5OiAxMjAwLFxyXG4gICAgICAgICAgICBzdGFydERlbGF5OiAxNDAwMCxcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHR5cGVkID0gbmV3IFR5cGVkKFwiLmpzLWNvdW50XCIsIG9wdGlvbnMpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyBzXHJcblxyXG5cclxuICAvLyBHcmlkXHJcbiAgICB2YXIgJGdyaWQgPSAkKCcuY2FyZHMnKS5pc290b3BlKHtcclxuICAgICAgICBpdGVtU2VsZWN0b3I6ICcuY2FyZHNfX2NhcmQnLFxyXG4gICAgICAgIHBlcmNlbnRQb3NpdGlvbjogdHJ1ZSxcclxuICAgICAgICBtYXNvbnJ5OiB7XHJcbiAgICAgICAgICAgIGNvbHVtbldpZHRoOiAnLmNhcmRzX19jYXJkLXNpemVyJyxcclxuICAgICAgICAgICAgZ3V0dGVyOiA1XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIGlmKCQoXCIjanMtZm9ybXNcIikubGVuZ3RoKSB7XHJcblxyXG4gICAgICAgICQoXCIjanMtZm9ybXMgLmNhcmRzX19jYXJkX19pbnB1dHMtaW5wdXRcIikub24oXCJjbGljayBmb2N1c1wiLCBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgJChcIiNqcy1mb3JtcyAuY2FyZHNfX2NhcmRfX2lucHV0cy1pbnB1dFwiKS5vbihcImZvY3Vzb3V0XCIsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIGlmKCQodGhpcykudmFsKCkgPT0gJycpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgJCggd2luZG93ICkucmVzaXplKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHBhdHRlcm5zLnJlc2l6ZSgpXHJcbiAgICB9KTtcclxuXHJcbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XHJcbiJdfQ==
