/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2020. MIT licensed.
 */
@charset "UTF-8";.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Poppins,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}.nav ul{list-style:none}.content{position:relative;max-width:90%;margin:auto;z-index:5;overflow:hidden}@media (min-width:767px){.content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:100vh}}.back-arrow{position:fixed;z-index:2222;background:#fff;left:0;bottom:0;padding:4px;border-radius:0;cursor:pointer;text-decoration:none;font-size:18px;width:100%;display:inline-block;text-align:center;mix-blend-mode:unset;background:hsla(0,0%,100%,.8)}@media (min-width:767px){.back-arrow{position:fixed;width:auto;z-index:2222;background:#fff;left:15px;bottom:15px;padding:15px;border-radius:5px;cursor:pointer;text-decoration:none;font-size:21px;mix-blend-mode:screen}}.back-arrow span{color:#666;transition:all 1s cubic-bezier(.2,1,.3,1)}.back-arrow:hover span{color:#000}.back-arrow svg{width:30px;vertical-align:middle;height:auto;cursor:pointer;overflow:visible}.back-arrow svg path,.back-arrow svg polygon{transition:all .5s cubic-bezier(.2,1,.3,1);fill:#666}.back-arrow:hover path,.back-arrow:hover svg polygon{transition:all 1s cubic-bezier(.2,1,.3,1);fill:#000}.back-arrow:hover svg .arrow{animation:f 2.5s cubic-bezier(.2,1,.3,1) infinite}.back-arrow:hover svg .arrow-fixed{animation:g 2.5s cubic-bezier(.2,1,.3,1) infinite}.lity-image img{padding:20px 0}.cards{width:100%;margin:60px auto}@media (min-width:1030px){.cards{max-width:940px}}@media (min-width:767px){.cards--half-width{max-width:560px}}@media (min-width:767px){.cards__about{font-size:17px}}.cards__card{width:100%;height:150px;background:hsla(0,0%,100%,.7);margin-bottom:15px;z-index:22;border-radius:5px}@media (min-width:600px){.cards__card{width:calc(50% - 2.5px);height:240px}}@media (min-width:767px){.cards__card{width:calc(25% - 15px)}}.cards__card--full{width:100%;mix-blend-mode:overlay;transform:rotateX(.01deg)}@media (min-width:767px){.cards__card--full{width:calc(100% - 15px)}}.cards__card--fat{width:100%;mix-blend-mode:overlay;transform:rotateX(.01deg)}@media (min-width:600px){.cards__card--fat{width:100%}}@media (min-width:767px){.cards__card--fat{width:calc(50% - 15px)}}.cards__card--fat-always{width:calc(50% - 15px)}.cards__card--short{height:165px}.cards__card--shorter{height:105px}.cards__card__inputs{height:auto;mix-blend-mode:unset}.cards__card__inputs-container{position:relative;margin:15px}.cards__card__inputs-input{width:100%;border:none;background:transparent;padding:10px 5px 4px 0;border-bottom:2px solid #666;font-size:18px;box-shadow:none}.cards__card__inputs-input.active+label,.cards__card__inputs-input:focus+label{transform:translateY(-16px) scale(.6)}.cards__card__inputs-input:focus{border-bottom:2px solid #000}.cards__card__inputs-input:invalid{border-bottom:3px solid red}.cards__card__inputs textarea{font-size:16px}.cards__card__inputs label{position:absolute;top:0;left:0;font-size:18px;cursor:text;transition:transform .2s ease-out,color .2s ease-out;transform-origin:0 100%;text-align:initial;transform:translateY(8px)}.cards__card__inputs button{width:100%;border:0;padding:8px 4px;font-size:22px;cursor:pointer;transition:.3s;color:#666;font-weight:700;background:transparent}.cards__card__inputs button:hover{color:#000}.cards__card--normal{display:none}@media (min-width:767px){.cards__card--normal{height:505px;display:block}}.cards__card--tall{display:none}@media (min-width:767px){.cards__card--tall{height:750px;display:block}}.cards__card-sizer{width:calc(50% - 2.5px)}@media (min-width:600px){.cards__card-sizer{width:calc(50% - 2.5px)}}@media (min-width:767px){.cards__card-sizer{width:calc(5% - 5px)}}.cards__card--content{mix-blend-mode:unset;padding:0 20px;overflow-y:scroll;height:auto}@media (min-width:767px){.cards__card--content{height:505px}}.cards__card--content-auto{height:auto}.cards__card-link{color:#444;font-weight:700;padding:2px;text-decoration:none;font-size:16px;position:relative;display:inline-block}.cards__card-link:after{width:90%;transition:.53s}.cards__card-link:after,.cards__card-link:before{content:"";display:block;height:2px;bottom:3px;left:50%;position:absolute;background:#444;transform:translateX(-50%)}.cards__card-link:before{width:81%;transition:.3s;transition-timing-function:ease-in}.cards__card-link:hover:before{transform:translateX(-50%) translateY(6px)}.cards__card-link--alt{color:#444;font-weight:700}.cards__card-link--alt:after,.cards__card-link--alt:before{display:none}.cards__card-title{display:-ms-flexbox;display:flex;height:100%;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;margin:0;color:#000;font-size:2em}@media (min-width:767px){.cards__card-title{font-size:3em}}.cards__card-title--big{font-size:3em}@media (min-width:500px){.cards__card-title--big{font-size:4em}}@media (min-width:767px){.cards__card-title--big{font-size:3.7em}}@media (min-width:1030px){.cards__card-title--big{font-size:4.7em}}.cards__card-title--portfolio{-ms-flex-wrap:wrap;flex-wrap:wrap}.cards__card-title--portfolio span{position:relative}@media (min-width:400px){.cards__card-title--portfolio{font-size:2.5em}}@media (min-width:600px){.cards__card-title--portfolio{font-size:3.6em}}@media (min-width:767px){.cards__card-title--portfolio{font-size:3.7em}}@media (min-width:1030px){.cards__card-title--portfolio{font-size:4.7em}}.cards__card-title--portfolio sub{font-size:80%;position:absolute;line-height:1;display:block;word-break:normal;width:100%;text-align:center;bottom:-35px}@media (min-width:500px){.cards__card-title--portfolio sub{font-size:30%;bottom:-15px;width:auto;right:0}}.cards__card-title--portfolio-single{font-size:2.5em;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:end;align-items:flex-end;margin-left:10px}.cards__card-title--small{font-size:40%;position:absolute;line-height:1;display:block;word-break:normal;width:100%;text-align:center;transform:translateX(-50%);left:50%;bottom:15px}@media (min-width:500px){.cards__card-title--small{font-size:30%;bottom:15px;width:auto}}.cards__card-image{mix-blend-mode:unset}.cards__card-image:after{content:"";background-image:url(../img/aylin.jpg);background-size:cover;background-position:50%;transform:scaleX(-1);filter:FlipH;-ms-filter:"FlipH";left:5px;width:calc(100% - 10px);bottom:5px;height:calc(100% - 10px);top:5px;right:5px;position:absolute}.cards__card-image--portfolio-single{display:block;cursor:pointer}.cards__card-image--portfolio-single:after{content:"";display:none}.cards__card-image--scarf:after{background-image:url(../img/portfolio/Scarf.jpg);filter:none;-ms-filter:"none";transform:scaleX(1);background-position:15%}.cards__card-image img{max-width:100%;padding:5px;display:block;display:none}@media (min-width:767px){.cards__card-image img{display:none}}.cards__card-image-single{z-index:33;background-image:url(../img/portfolio/Portf.jpg);background-size:cover;background-position:50%;left:5px;width:calc(100% - 10px);bottom:5px;height:calc(100% - 10px);top:5px;right:5px;position:absolute}.cards__card-portfolio-item-name{position:absolute;background:rgba(0,0,0,.5);left:-5px;bottom:-5px;padding:3px 20px 0;color:#fff;font-size:15px;letter-spacing:1px}.cards__card-item{perspective:1000px;background:transparent;z-index:2;transform:scale3d()}.cards__card-item-flipper{transition:.6s;transform-style:preserve-3d;position:relative;height:100%;background:hsla(0,0%,100%,.7);will-change:transform;border-radius:5px}.cards__card-item:focus,.cards__card-item:hover{mix-blend-mode:screen}.cards__card-item:focus .cards__card-item-flipper,.cards__card-item:hover .cards__card-item-flipper{transform:rotateY(180deg) scale(.81)}.cards__card-item:focus .cards__card-item-back-text,.cards__card-item:hover .cards__card-item-back-text{transform:scale(1)}.cards__card-item--disabled{cursor:default}.cards__card-item-back,.cards__card-item-front{-webkit-backface-visibility:hidden;backface-visibility:hidden;position:absolute;top:5px;left:5px}.cards__card-item-front{background-size:cover;background-position:50%;background-blend-mode:darken;left:5px;width:calc(100% - 10px);bottom:5px;height:calc(100% - 10px);top:5px;right:5px;position:absolute;z-index:2}.cards__card-item-front--contain{background-size:contain;background-repeat:no-repeat}.cards__card-item-back{transform:rotateY(180deg);display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:calc(100% - 10px);width:calc(100% - 10px)}.cards__card-item-back-text{transform:scale(.01);font-size:24px;font-weight:800;color:#000}.cards__card-item-back-text a{font-size:16px;display:block}.cards__card--home{mix-blend-mode:screen}.cards__card--home .cards__card-item-flipper{will-change:unset}.cards__card--home .cards__card-item-back,.cards__card--home .cards__card-item-back-text{transform:none}.cards__card--home:hover .cards__card-item-flipper{transform:scale(.9)}.cards.cards--grid{display:-ms-grid;display:grid;-ms-grid-columns:auto;grid-template-columns:auto;-ms-grid-rows:1fr;grid-template-rows:1fr;grid-template-areas:"a" "b" "c" "d" "e" "f";grid-gap:10px}@media (min-width:767px){.cards.cards--grid{-ms-grid-columns:1fr 1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr 1fr;-ms-grid-rows:1fr 1fr 1fr;grid-template-rows:1fr 1fr 1fr;grid-template-areas:"a a a a" "b b c d" "b b e f"}}.cards.cards--grid .cards__card{position:relative;width:100%;margin-bottom:0}.cards.cards--grid .card--heading{grid-area:a}.cards.cards--grid .card--slider{grid-area:b;height:100%;padding:5px;display:none}@media (min-width:767px){.cards.cards--grid .card--slider{display:block}}.cards.cards--grid .card--portfolio-item-1{grid-area:c}.cards.cards--grid .card--portfolio-item-2{grid-area:d}.cards.cards--grid .card--portfolio-item-3{grid-area:e}.cards.cards--grid .card--portfolio-item-4{grid-area:f}.cards.cards--grid .slick-list,.cards.cards--grid .slick-slide>div,.cards.cards--grid .slick-track{height:100%}.cards.cards--grid .slider__image{background-size:cover;height:100%;position:relative}.cards.cards--grid .slider__image .caption{position:absolute;background:rgba(0,0,0,.5);left:0;bottom:0;padding:3px 20px 0;color:#fff;font-size:15px;letter-spacing:1px}.cards.cards--grid .slick-next,.cards.cards--grid .slick-prev{width:45px;height:35px;background:rgba(0,0,0,.5);bottom:5px;transform:none;top:auto}.cards.cards--grid .slick-next:before,.cards.cards--grid .slick-prev:before{content:"↼";font-family:poppins,helvetica,arial;font-size:22px}.cards.cards--grid .slick-prev{right:55px;left:auto;z-index:10}.cards.cards--grid .slick-next{right:5px}.cards.cards--grid .slick-next:before{content:"⇀";font-family:poppins,helvetica,arial;font-size:22px}.cards.cards--portfolio{max-width:1140px}@media (min-width:767px){.cards.cards--portfolio .image-area{grid-area:g}}@media (min-width:767px){.cards.cards--portfolio .content-area{grid-area:h}}.cards.cards--portfolio .portfolio-grid--1{display:-ms-grid;display:grid;-ms-grid-columns:1fr;grid-template-columns:1fr;-ms-grid-rows:auto;grid-template-rows:auto;grid-gap:10px;margin-top:10px}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--1{-ms-grid-columns:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr;grid-template-areas:"g g h"}}.cards.cards--portfolio .portfolio-grid--1 .cards__card{max-height:400px}.cards.cards--portfolio .portfolio-grid--2{display:-ms-grid;display:grid;-ms-grid-columns:1fr;grid-template-columns:1fr;-ms-grid-rows:auto;grid-template-rows:auto;grid-gap:10px;margin-top:10px}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--2{-ms-grid-columns:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr;grid-template-areas:"h g g"}}.cards.cards--portfolio .portfolio-grid--2 .cards__card{max-height:400px}.cards.cards--portfolio .portfolio-grid--3{display:-ms-grid;display:grid;-ms-grid-columns:1fr;grid-template-columns:1fr;-ms-grid-rows:auto;grid-template-rows:auto;grid-gap:10px;margin-top:10px}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--3{-ms-grid-columns:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr;grid-template-areas:"i j h"}}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--3 .image-area:first-of-type{grid-area:i}}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--3 .image-area:nth-of-type(2){grid-area:j}}.cards.cards--portfolio .portfolio-grid--3 .cards__card{max-height:500px}.cards.cards--portfolio .portfolio-grid--4{display:-ms-grid;display:grid;-ms-grid-columns:1fr;grid-template-columns:1fr;-ms-grid-rows:auto;grid-template-rows:auto;grid-gap:10px;margin-top:10px}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--4{-ms-grid-columns:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr;grid-template-areas:"h i j"}}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--4 .image-area:first-of-type{grid-area:i}}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--4 .image-area:nth-of-type(2){grid-area:j}}.cards.cards--portfolio .portfolio-grid--4 .cards__card{max-height:500px}.cards.cards--portfolio .portfolio-grid--5{display:-ms-grid;display:grid;-ms-grid-columns:1fr;grid-template-columns:1fr;-ms-grid-rows:auto;grid-template-rows:auto;grid-gap:10px;margin-top:10px}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--5{-ms-grid-columns:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr;grid-template-areas:"i i j"}}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--5 .image-area:first-of-type{grid-area:i}}@media (min-width:767px){.cards.cards--portfolio .portfolio-grid--5 .image-area:nth-of-type(2){grid-area:j}}.cards.cards--portfolio .portfolio-grid--5 .cards__card{max-height:500px}.cards.cards--portfolio .cards__card{position:relative;width:100%;margin-bottom:0;margin-top:0}.cards.cards--portfolio .cards__card .caption{position:absolute;background:rgba(0,0,0,.5);left:0;bottom:0;padding:3px 20px 0;color:#fff;font-size:15px;letter-spacing:1px}.cards.cards--portfolio .cards__card.video{position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.cards.cards--portfolio .cards__card.video iframe{position:absolute;top:0;left:0;width:100%;height:100%}.cards.cards--portfolio .cards__card p{font-size:16px}canvas{top:0;left:0;position:fixed!important;width:100%!important;height:100%!important}strong{font-weight:900}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.animated{animation-duration:.8s;animation-fill-mode:backwards}@keyframes a{0%,20%,40%,60%,80%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:scale3d(.3,.3,.3)}20%{transform:scale3d(1.1,1.1,1.1)}40%{transform:scale3d(.9,.9,.9)}60%{opacity:1;transform:scale3d(1.03,1.03,1.03)}80%{transform:scale3d(.97,.97,.97)}to{opacity:1;transform:scaleX(1)}}.bounceIn{animation-duration:.75s;animation-name:a}@keyframes b{0%{transform:translate3d(-60%,0,0);opacity:0}to{transform:translateZ(0);opacity:1}}.slideInRight{animation-name:b}@keyframes c{0%{opacity:0;transform:scale(.3)}50%{opacity:1}to{transform:scale(1)}}@keyframes d{0%{opacity:0;transform:scale(2)}50%{opacity:.6}to{opacity:1;transform:scale(1);color:#666}}.zoomIn{animation-name:c}.zoomIn-alt{animation-name:d;animation-duration:1s;animation-fill-mode:both}@keyframes e{0%{opacity:0}to{opacity:1}}.fadeIn{animation-name:e}@keyframes f{0%{opacity:1;transform:translateX(0)}5%{transform:translateX(-.1rem)}to{transform:translateX(1rem);opacity:0}}@keyframes g{5%{opacity:0}20%{opacity:.4}to{opacity:1}}@keyframes h{0%{opacity:0;transform:translate3d(0,20%,0)}to{opacity:1;transform:translateZ(0)}}.fadeInDown{animation-name:h}@keyframes i{0%{transform:scale(1.2);opacity:0}to{transform:scale(1);opacity:1}}.fade-in-fwd{animation:i .6s cubic-bezier(.39,.575,.565,1) both}@keyframes j{0%{transform:perspective(600px) rotateY(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(600px) rotateY(-20deg);animation-timing-function:ease-in}60%{transform:perspective(600px) rotateY(10deg);opacity:1}80%{transform:perspective(600px) rotateY(-5deg)}to{transform:perspective(600px)}}.flipInY{-webkit-backface-visibility:visible!important;backface-visibility:visible!important;animation-name:j}.designed-by{display:none}@media (min-width:767px){.designed-by{position:fixed;width:auto;z-index:2222;background:#fff;right:15px;bottom:15px;padding:15px;border-radius:5px;text-decoration:none;font-size:21px;mix-blend-mode:screen;display:inline-block}}.designed-by span{color:#666}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL19jYXJkcy5zY3NzIiwibW9kdWxlcy9fY2xlYXJmaXguc2NzcyIsInN0eWxlLmNzcyIsIm1vZHVsZXMvX2RlZmF1bHRzLnNjc3MiLCJtb2R1bGVzL19ub3JtYWxpemUuc2NzcyIsInBhcnRpYWxzL19oZWFkZXIuc2NzcyIsIm1peGlucy9fcG9zaXRpb24uc2NzcyIsInBhcnRpYWxzL19uYXYuc2NzcyIsInBhcnRpYWxzL19tYWluLnNjc3MiLCJwYXJ0aWFscy9fY2FudmFzLnNjc3MiLCJtb2R1bGVzL190eXBvZ3JhcGh5LnNjc3MiLCJtb2R1bGVzL19taXNjLnNjc3MiLCJtb2R1bGVzL19hcHAuc2NzcyIsIm1vZHVsZXMvX3ByaW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxpQkE2aUJPLEFDN2lCUCwyQkFDRSxZQUFZLEFBQ1osYUFBYyxDQUNmLEFBQ0QsUUNFRSxNRERRLENBRFYsQUFTQyxhQUZHLFVBQVcsQ0FDWixBRVpILEVBQ0Usc0JBQXNCLEFBQ3RCLDJCQUEyQixBQUMzQixpQ0FBa0MsQ0FDbkMsQUFDRCxLQUNFLGVBQWdCLENBQ2pCLEFBQ0QsS0FDRSwwQ0FBOEMsQUFDOUMsV0FBVyxBQUNYLDhCQUErQixDQUloQyxBQUNELFVBQ0MsZ0JBQWlCLENBRWpCOztBQ25CRCw0RURLQSxBQ0w0RSxLQVExRSx1QkFBdUIsQUFDdkIsMEJBQTBCLEFBQzFCLDZCQUE4QixDREZoQyxBQ0dDLEtBT0MsUUFBUyxDQUNWLEFBV0Qsb0ZBWUUsYUFBYyxDQUNmLEFBTUQsNEJBSUUsb0JBQXFCLENBQ3RCLEFBTUQsc0JBQ0UsYUFBYSxBQUNiLFFBQVMsQ0FDVixBQU1ELFNBQ0UsdUJBQXdCLENBQ3pCLEFBT0Qsa0JBRUUsWUFBYSxDQUNkLEFBVUQsRUFDRSw2QkFBNkIsQUFDN0Isb0NBQXFDLENBQ3RDLEFBT0QsaUJBRUUsZUFBZ0IsQ0FDakIsQUFVRCxZQUNFLG1CQUFtQixBQUNuQiwwQkFBMEIsQUFDMUIsZ0NB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RCxTQUFVLENBQUEsQUFHWixJQUNFLDJDQUFzRCxDQUFBLEFBR3hELEdBQ0UsNEJBQTZCLENBQUEsQ0FBQSxBQUlqQyxTQUNFLDhDQUFBLEFBQXVDLHNDQUFBLEFBQ3ZDLGdCQUF1QixDQUN4QixBQ3hPRCxhQUVFLFlBQWEsQ0FDYixBQWlCRCx5QkFwQkQsYUFJSSxlQUFlLEFBQ2YsV0FBVyxBQUNYLGFBQWEsQUFDYixnQkFBZ0IsQUFDaEIsV0FBVyxBQUNYLFlBQVksQUFDWixhQUFhLEFBQ2Isa0JBQWtCLEFBQ2xCLHFCQUFxQixBQUNyQixlQUFlLEFBQ2Ysc0JBQXNCLEFBQ3RCLG9CQUFxQixDQUt4QixDQXBCRCxBQW9CQyxrQkFGRyxVQUFXLENBQ1osQUNuQkgsYVZBQSxFVUVJLGlDQUFrQyxBQUNsQyxxQkFBc0IsQUFDdEIsMEJBQTJCLEFBQzNCLDBCQUE0QixDQUM3QixBQUNELFlBRUUseUJBQTBCLENBQzNCLEFBQ0QsY0FDRSwyQkFBNEIsQ0FDN0IsQUFDRCxrQkFDRSw0QkFBNkIsQ0FDOUIsQUFDRCw0REFHRSxVQUFXLENBQ1osQUFDRCxlQUVFLHNCQUFzQixBQUN0Qix1QkFBd0IsQ0FDekIsQUFDRCxNQUNFLDBCQUEyQixDQUM1QixBQUNELE9BRUUsdUJBQXdCLENUeUs1QixBU3hLRyxJQUVDLHdCQUEwQixDQUMzQixBQUNELE1BQ0UsV0FBYSxDQUFBLEFBRWYsUUFHRSxVQUFVLEFBQ1YsUUFBUyxDQUNWLEFBQ0QsTUFFRSxzQkFBdUIsQ0FDeEIsQ0FBQSIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmRzIHtcclxuICB3aWR0aDogMTAwJTtcclxuICAvL292ZXJmbG93LXg6IGhpZGRlbjtcclxuICAvLyB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG5cclxuICB9XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMzBweCkge1xyXG4gICAgbWF4LXdpZHRoOiA5NDBweDtcclxuICB9XHJcbiAgbWFyZ2luOiA2MHB4IGF1dG87XHJcblxyXG4gICYtLWhhbGYtd2lkdGgge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgIG1heC13aWR0aDogNTYwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gICZfX2Fib3V0IHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gICZfX2NhcmQge1xyXG4gICAgLy90cmFuc2l0aW9uOiAwLjVzO1xyXG4gICAgLy9mbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxNTBweDtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsMC43KTtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICB6LWluZGV4OiAyMjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xyXG4gICAgICB3aWR0aDogY2FsYyg1MCUgLSAyLjVweCk7XHJcbiAgICAgIGhlaWdodDogMjQwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgd2lkdGg6IGNhbGMoMjUlIC0gMTVweCk7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAzMHB4KSB7XHJcbiAgICAgIC8vICB3aWR0aDogY2FsYygyNSUgLSA1cHgpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG5cclxuICAgICYtLWZ1bGwge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgbWl4LWJsZW5kLW1vZGU6IG92ZXJsYXk7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlWCgwLjAxZGVnKTtcclxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDE1cHgpO1xyXG5cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtLWZhdCB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtaXgtYmxlbmQtbW9kZTogb3ZlcmxheTtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDAuMDFkZWcpO1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAxNXB4KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1hbHdheXMge1xyXG4gICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDE1cHgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgICYtLXNob3J0e1xyXG4gICAgICBoZWlnaHQ6IDE2NXB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtLXNob3J0ZXIge1xyXG4gICAgICBoZWlnaHQ6IDEwNXB4O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAmX19pbnB1dHMge1xyXG4gICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgIG1peC1ibGVuZC1tb2RlOiB1bnNldDtcclxuICAgICAgJi1jb250YWluZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW46IDE1cHg7XHJcbiAgICAgIH1cclxuICAgICAgJi1pbnB1dCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggNXB4IDRweCAwcHg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM2NjY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgJjpmb2N1cyArIGxhYmVsLCAmLmFjdGl2ZSArIGxhYmVsIHtcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTZweCkgc2NhbGUoMC42KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgYmxhY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6aW52YWxpZCB7XHJcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgcmVkO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICB0ZXh0YXJlYSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICB9XHJcbiAgICAgIGxhYmVsIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIGN1cnNvcjogdGV4dDtcclxuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIC4ycyBlYXNlLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gLjJzIGVhc2Utb3V0O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIC4ycyBlYXNlLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gLjJzIGVhc2Utb3V0O1xyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnMgZWFzZS1vdXQsIGNvbG9yIC4ycyBlYXNlLW91dDtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIGVhc2Utb3V0LCBjb2xvciAuMnMgZWFzZS1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIC4ycyBlYXNlLW91dDtcclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IDAlIDEwMCU7XHJcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogMCUgMTAwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBpbml0aWFsO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg4cHgpO1xyXG4gICAgICB9XHJcbiAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm9yZGVyOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDhweCA0cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLS1taXgge1xyXG4gICAgICAgIC8vbWl4LWJsZW5kLW1vZGU6IG92ZXJsYXk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS1ub3JtYWwge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICBoZWlnaHQ6IDUwNXB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi0tdGFsbCB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgIGhlaWdodDogNzUwcHg7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgJi1zaXplciB7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDIuNXB4KTtcclxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMi41cHgpO1xyXG4gICAgICB9XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgIHdpZHRoOiBjYWxjKDUlIC0gNXB4KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtLWNvbnRlbnR7XHJcbiAgICAgIG1peC1ibGVuZC1tb2RlOiB1bnNldDtcclxuICAgICAgcGFkZGluZzogMCAyMHB4O1xyXG4gICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgICAgIGhlaWdodDogYXV0bztcclxuXHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgIGhlaWdodDogNTA1cHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFRPRE86IEJlbSBpdFxyXG5cclxuICAgICAgJi1hdXRvIHtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICYtbGluayB7XHJcbiAgICAgIGNvbG9yOiAjNDQ0O1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgcGFkZGluZzogMnB4IDJweDtcclxuICAgICAgLy9ib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAmOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgIGJvdHRvbTogM3B4O1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjNDQ0O1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjUzcztcclxuICAgICAgfVxyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgYm90dG9tOiAzcHg7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB3aWR0aDogODElO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICM0NDQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW47XHJcbiAgICAgIH1cclxuICAgICAgJjpob3ZlcjpiZWZvcmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDZweCk7XHJcbiAgICAgIH1cclxuICAgICAgJi0tYWx0IHtcclxuICAgICAgICBjb2xvcjogIzQ0NDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAmOmJlZm9yZSwgJjphZnRlciB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtdGl0bGUge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBtYXJnaW46IDA7XHJcbiAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgZm9udC1zaXplOiAyZW07XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgICB9XHJcbiAgICAgICYtLWJpZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzZW07XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDUwMHB4KSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDRlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDMuN2VtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAzMHB4KSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDQuN2VtO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAmLS1wb3J0Zm9saW8ge1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBzcGFuIHtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMy42ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAzLjdlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMzBweCkge1xyXG4gICAgICAgICAgZm9udC1zaXplOiA0LjdlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3ViIHtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogODAlO1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIHdvcmQtYnJlYWs6IG5vcm1hbDtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgYm90dG9tOiAtMzVweDtcclxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMwJTtcclxuICAgICAgICAgICAgYm90dG9tOiAtMTVweDtcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLXNpbmdsZSB7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtLXNtYWxsIHtcclxuICAgICAgZm9udC1zaXplOiA0MCU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB3b3JkLWJyZWFrOiBub3JtYWw7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgICBib3R0b206IDE1cHg7XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzAlO1xyXG4gICAgICAgIGJvdHRvbTogMTVweDtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtaW1hZ2Uge1xyXG4gICAgICBtaXgtYmxlbmQtbW9kZTogdW5zZXQ7XHJcbiAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvYXlsaW4uanBnKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7XHJcbiAgICAgICAgZmlsdGVyOiBGbGlwSDtcclxuICAgICAgICAtbXMtZmlsdGVyOiBcIkZsaXBIXCI7XHJcbiAgICAgICAgbGVmdDogNXB4O1xyXG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMHB4KTtcclxuICAgICAgICBib3R0b206IDVweDtcclxuICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwcHgpO1xyXG4gICAgICAgIHRvcDogNXB4O1xyXG4gICAgICAgIHJpZ2h0OiA1cHg7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB9XHJcbiAgICAgICYtLXBvcnRmb2xpby1zaW5nbGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICAgIC8vZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAvL2hlaWdodDogYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtLXNjYXJme1xyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9wb3J0Zm9saW8vU2NhcmYuanBnKTtcclxuICAgICAgICAgIGZpbHRlcjogbm9uZTtcclxuICAgICAgICAgIC1tcy1maWx0ZXI6IFwibm9uZVwiO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxNSU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi1zaW5nbGUge1xyXG4gICAgICAgIHotaW5kZXg6MzM7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9wb3J0Zm9saW8vUG9ydGYuanBnKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBsZWZ0OiA1cHg7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpO1xyXG4gICAgICAgIGJvdHRvbTogNXB4O1xyXG4gICAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTBweCk7XHJcbiAgICAgICAgdG9wOiA1cHg7XHJcbiAgICAgICAgcmlnaHQ6IDVweDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLXBvcnRmb2xpby1pdGVtLW5hbWV7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gICAgICBsZWZ0OiAtNXB4O1xyXG4gICAgICBib3R0b206IC01cHg7XHJcbiAgICAgIHBhZGRpbmc6IDNweCAyMHB4IDBweDtcclxuICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIH1cclxuICAgICYtaXRlbSB7XHJcbiAgICAgIHBlcnNwZWN0aXZlOiAxMDAwcHg7XHJcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgICAvL3RyYW5zaXRpb246IDAuM3M7XHJcbiAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgIC8vdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKCk7XHJcblxyXG5cclxuXHJcbiAgICAgICYtZmxpcHBlciB7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogMC42cztcclxuICAgICAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsMjU1LDI1NSwuNyk7XHJcbiAgICAgICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6aG92ZXIsJjpmb2N1cyB7XHJcbiAgICAgICAgLy9taXgtYmxlbmQtbW9kZTogb3ZlcmxheTtcclxuICAgICAgICBtaXgtYmxlbmQtbW9kZTogc2NyZWVuO1xyXG4gICAgICAgIC8vdHJhbnNmb3JtOiBzY2FsZSgwLjgxKTtcclxuICAgICAgICAuY2FyZHNfX2NhcmQtaXRlbS1mbGlwcGVyIHtcclxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpIHNjYWxlKDAuODEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuY2FyZHNfX2NhcmQtaXRlbS1iYWNrLXRleHQge1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtLWRpc2FibGVkIHtcclxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgICAgIH1cclxuICAgICAgJi1mcm9udCwgJi1iYWNrIHtcclxuICAgICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNXB4O1xyXG4gICAgICAgIGxlZnQ6IDVweDtcclxuICAgICAgfVxyXG4gICAgICAmLWZyb250IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IGRhcmtlbjtcclxuICAgICAgICBsZWZ0OiA1cHg7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpO1xyXG4gICAgICAgIGJvdHRvbTogNXB4O1xyXG4gICAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTBweCk7XHJcbiAgICAgICAgdG9wOiA1cHg7XHJcbiAgICAgICAgcmlnaHQ6IDVweDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICAvL3RyYW5zZm9ybTogcm90YXRlWSgwZGVnKTtcclxuICAgICAgICAmLS1jb250YWluIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtYmFjayB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTBweCk7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpO1xyXG4gICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMDEpO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi0taG9tZSB7XHJcbiAgICAgICAgbWl4LWJsZW5kLW1vZGU6IHNjcmVlbjtcclxuICAgICAgLmNhcmRzX19jYXJkLWl0ZW0tZmxpcHBlciB7XHJcbiAgICAgICAgd2lsbC1jaGFuZ2U6IHVuc2V0O1xyXG4gICAgICB9XHJcbiAgICAgIC5jYXJkc19fY2FyZC1pdGVtLWJhY2sge1xyXG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgICAuY2FyZHNfX2NhcmQtaXRlbS1iYWNrLXRleHQge1xyXG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgfVxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICAuY2FyZHNfX2NhcmQtaXRlbS1mbGlwcGVyIHtcclxuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgJi5jYXJkcy0tZ3JpZCB7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG5cclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0bztcclxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJIZWFkaW5nXCIgXCJTbGlkZXJcIiBcIlBvcnRmb2xpbzFcIiBcIlBvcnRmb2xpbzJcIiBcIlBvcnRmb2xpbzNcIiBcIlBvcnRmb2xpbzRcIjtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyIDFmcjtcclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyIDFmcjtcclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJIZWFkaW5nIEhlYWRpbmcgSGVhZGluZyBIZWFkaW5nXCIgXCJTbGlkZXIgU2xpZGVyIFBvcnRmb2xpbzEgUG9ydGZvbGlvMlwiIFwiU2xpZGVyIFNsaWRlciBQb3J0Zm9saW8zIFBvcnRmb2xpbzRcIjtcclxuICAgIH1cclxuICAgIGdyaWQtZ2FwOiAxMHB4O1xyXG5cclxuICAgIC5jYXJkc19fY2FyZCB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5jYXJkLS1oZWFkaW5nIHtcclxuICAgICAgZ3JpZC1hcmVhOiBIZWFkaW5nO1xyXG4gICAgfVxyXG4gICAgLmNhcmQtLXNsaWRlciB7XHJcbiAgICAgIGdyaWQtYXJlYTogU2xpZGVyO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCA0IHtcclxuICAgICAgLmNhcmQtLXBvcnRmb2xpby1pdGVtLSN7JGl9IHtcclxuICAgICAgICBncmlkLWFyZWE6IFBvcnRmb2xpbyN7JGl9O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnNsaWNrLWxpc3QsIC5zbGljay10cmFjaywgLnNsaWNrLXNsaWRlID4gZGl2IHtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIC5zbGlkZXJfX2ltYWdlIHtcclxuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIC5jYXB0aW9uIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuNSk7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgIGJvdHRvbTogMHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDNweCAyMHB4IDA7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuc2xpY2stbmV4dCwgLnNsaWNrLXByZXYge1xyXG4gICAgICB3aWR0aDogNDVweDtcclxuICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC41KTtcclxuICAgICAgYm90dG9tOiA1cHg7XHJcbiAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgICAgdG9wOiBhdXRvO1xyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJ+KGvCc7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHBvcHBpbnMsIGhlbHZldGljYSwgYXJpYWw7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAuc2xpY2stcHJldiB7XHJcbiAgICAgIHJpZ2h0OiA1NXB4O1xyXG4gICAgICBsZWZ0OiBhdXRvO1xyXG4gICAgICB6LWluZGV4OiAxMDtcclxuICAgIH1cclxuICAgIC5zbGljay1uZXh0IHtcclxuICAgICAgcmlnaHQ6IDVweDtcclxuICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgY29udGVudDogJ+KHgCc7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHBvcHBpbnMsIGhlbHZldGljYSwgYXJpYWw7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmNhcmRzLS1wb3J0Zm9saW8ge1xyXG4gICAgbWF4LXdpZHRoOiAxMTQwcHg7XHJcblxyXG4gICAgLmltYWdlLWFyZWF7XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgIGdyaWQtYXJlYTogaW1hZ2U7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5jb250ZW50LWFyZWEge1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICBncmlkLWFyZWE6IGNvbnRlbnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5wb3J0Zm9saW8tZ3JpZC0tMSB7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaW1hZ2UgaW1hZ2UgY29udGVudFwiO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XHJcbiAgICAgIGdyaWQtZ2FwOiAxMHB4O1xyXG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG5cclxuICAgICAgLmNhcmRzX19jYXJkIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA0MDBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnBvcnRmb2xpby1ncmlkLS0yIHtcclxuICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJjb250ZW50IGltYWdlIGltYWdlXCI7XHJcbiAgICAgIH1cclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICBncmlkLWdhcDogMTBweDtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgLmNhcmRzX19jYXJkIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA0MDBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3J0Zm9saW8tZ3JpZC0tMyB7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaW1hZ2UxIGltYWdlMiBjb250ZW50XCI7XHJcbiAgICAgIH1cclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICBncmlkLWdhcDogMTBweDtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgLmltYWdlLWFyZWEge1xyXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMSkge1xyXG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaW1hZ2UxO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgICAgICBncmlkLWFyZWE6IGltYWdlMjtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLmNhcmRzX19jYXJkIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3J0Zm9saW8tZ3JpZC0tNCB7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiY29udGVudCBpbWFnZTEgaW1hZ2UyXCI7XHJcbiAgICAgIH1cclxuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICBncmlkLWdhcDogMTBweDtcclxuICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgLmltYWdlLWFyZWEge1xyXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMSkge1xyXG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaW1hZ2UxO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOm50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xyXG4gICAgICAgICAgICBncmlkLWFyZWE6IGltYWdlMjtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgLmNhcmRzX19jYXJkIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5wb3J0Zm9saW8tZ3JpZC0tNSB7XHJcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaW1hZ2UxIGltYWdlMSBpbWFnZTJcIjtcclxuICAgICAgfVxyXG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XHJcbiAgICAgIGdyaWQtZ2FwOiAxMHB4O1xyXG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAuaW1hZ2UtYXJlYSB7XHJcbiAgICAgICAgJjpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcclxuICAgICAgICAgICAgZ3JpZC1hcmVhOiBpbWFnZTE7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMikge1xyXG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaW1hZ2UyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICAuY2FyZHNfX2NhcmQge1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDUwMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmNhcmRzX19jYXJkIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgLmNhcHRpb24ge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC41KTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBwYWRkaW5nOiAzcHggMjBweCAwO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgICB9XHJcbiAgICAgICYudmlkZW8ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyAvKiAxNjo5ICovXHJcbiAgICAgICAgcGFkZGluZy10b3A6IDI1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAwO1xyXG5cclxuICAgICAgICBpZnJhbWUge1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBwIHtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIiwiJWNsZWFyIHtcclxuICBjb250ZW50OiAnICc7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbn1cclxuLmNsZWFyIHtcclxuICAqem9vbTogMTtcclxuICAmOmJlZm9yZSB7XHJcbiAgICBAZXh0ZW5kICVjbGVhcjtcclxuICB9XHJcbiAgJjphZnRlciB7XHJcbiAgICBAZXh0ZW5kICVjbGVhcjtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gIH1cclxufVxyXG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG4uY2xlYXI6YmVmb3JlLCAuY2xlYXI6YWZ0ZXIge1xuICBjb250ZW50OiAnICc7XG4gIGRpc3BsYXk6IHRhYmxlOyB9XG5cbi5jbGVhciB7XG4gICp6b29tOiAxOyB9XG4gIC5jbGVhcjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiA2Mi41JTsgfVxuXG5ib2R5IHtcbiAgZm9udDogMzAwIDEzcHgvMS42ICdQb3BwaW5zJywgSGVsdmV0aWNhLCBBcmlhbDtcbiAgY29sb3I6ICM0NDQ7XG4gIHRyYW5zaXRpb246IGFsbCAuNHMgLjNzIGVhc2UtaW47IH1cblxuYm9keSwgaHRtbCB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoOyB9XG5cbi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cclxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXHJcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cclxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cclxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcclxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxyXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cclxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxyXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcclxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxyXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXHJcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcclxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXHJcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cclxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxyXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XHJcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxyXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxyXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLmxvZ28ge1xuICBtYXJnaW46IC01OHB4IDAgMCAtMTAwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTsgfVxuXG4ubmF2IHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4uY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1hcmdpbjogYXV0bztcbiAgei1pbmRleDogNTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAuY29udGVudCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoOyB9IH1cblxuLmJhY2stYXJyb3cge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDIyMjI7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcGFkZGluZzogNHB4O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1peC1ibGVuZC1tb2RlOiB1bnNldDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAgIC5iYWNrLWFycm93IHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgei1pbmRleDogMjIyMjtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgbGVmdDogMTVweDtcbiAgICAgIGJvdHRvbTogMTVweDtcbiAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBmb250LXNpemU6IDIxcHg7XG4gICAgICBtaXgtYmxlbmQtbW9kZTogc2NyZWVuOyB9IH1cbiAgLmJhY2stYXJyb3cgc3BhbiB7XG4gICAgY29sb3I6ICM2NjY7XG4gICAgdHJhbnNpdGlvbjogYWxsIDFzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSk7IH1cbiAgLmJhY2stYXJyb3c6aG92ZXIgc3BhbiB7XG4gICAgY29sb3I6IGJsYWNrOyB9XG4gIC5iYWNrLWFycm93IHN2ZyB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlOyB9XG4gICAgLmJhY2stYXJyb3cgc3ZnIHBvbHlnb24sIC5iYWNrLWFycm93IHN2ZyBwYXRoIHtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSk7XG4gICAgICBmaWxsOiAjNjY2OyB9XG4gIC5iYWNrLWFycm93OmhvdmVyIHN2ZyBwb2x5Z29uLCAuYmFjay1hcnJvdzpob3ZlciBwYXRoIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMXMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKTtcbiAgICBmaWxsOiAjMDAwOyB9XG4gIC5iYWNrLWFycm93OmhvdmVyIHN2ZyAuYXJyb3cge1xuICAgIGFuaW1hdGlvbjogYXJyb3ctYW5pbSAyLjVzIGN1YmljLWJlemllcigwLjIsIDEsIDAuMywgMSkgaW5maW5pdGU7IH1cbiAgLmJhY2stYXJyb3c6aG92ZXIgc3ZnIC5hcnJvdy1maXhlZCB7XG4gICAgYW5pbWF0aW9uOiBhcnJvdy1maXhlZC1hbmltIDIuNXMgY3ViaWMtYmV6aWVyKDAuMiwgMSwgMC4zLCAxKSBpbmZpbml0ZTsgfVxuXG4ubGl0eS1pbWFnZSBpbWcge1xuICBwYWRkaW5nOiAyMHB4IDA7IH1cblxuLmNhcmRzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogNjBweCBhdXRvOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDMwcHgpIHtcbiAgICAuY2FyZHMge1xuICAgICAgbWF4LXdpZHRoOiA5NDBweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAgIC5jYXJkcy0taGFsZi13aWR0aCB7XG4gICAgICBtYXgtd2lkdGg6IDU2MHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgLmNhcmRzX19hYm91dCB7XG4gICAgICBmb250LXNpemU6IDE3cHg7IH0gfVxuICAuY2FyZHNfX2NhcmQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTUwcHg7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgei1pbmRleDogMjI7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gICAgICAuY2FyZHNfX2NhcmQge1xuICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAyLjVweCk7XG4gICAgICAgIGhlaWdodDogMjQwcHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAgICAgLmNhcmRzX19jYXJkIHtcbiAgICAgICAgd2lkdGg6IGNhbGMoMjUlIC0gMTVweCk7IH0gfVxuICAgIC5jYXJkc19fY2FyZC0tZnVsbCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1peC1ibGVuZC1tb2RlOiBvdmVybGF5O1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGVYKDAuMDFkZWcpOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzX19jYXJkLS1mdWxsIHtcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMTVweCk7IH0gfVxuICAgIC5jYXJkc19fY2FyZC0tZmF0IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWl4LWJsZW5kLW1vZGU6IG92ZXJsYXk7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZVgoMC4wMWRlZyk7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA2MDBweCkge1xuICAgICAgICAuY2FyZHNfX2NhcmQtLWZhdCB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkc19fY2FyZC0tZmF0IHtcbiAgICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAxNXB4KTsgfSB9XG4gICAgICAuY2FyZHNfX2NhcmQtLWZhdC1hbHdheXMge1xuICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAxNXB4KTsgfVxuICAgIC5jYXJkc19fY2FyZC0tc2hvcnQge1xuICAgICAgaGVpZ2h0OiAxNjVweDsgfVxuICAgIC5jYXJkc19fY2FyZC0tc2hvcnRlciB7XG4gICAgICBoZWlnaHQ6IDEwNXB4OyB9XG4gICAgLmNhcmRzX19jYXJkX19pbnB1dHMge1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgbWl4LWJsZW5kLW1vZGU6IHVuc2V0OyB9XG4gICAgICAuY2FyZHNfX2NhcmRfX2lucHV0cy1jb250YWluZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbjogMTVweDsgfVxuICAgICAgLmNhcmRzX19jYXJkX19pbnB1dHMtaW5wdXQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgcGFkZGluZzogMTBweCA1cHggNHB4IDBweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM2NjY7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTsgfVxuICAgICAgICAuY2FyZHNfX2NhcmRfX2lucHV0cy1pbnB1dDpmb2N1cyArIGxhYmVsLCAuY2FyZHNfX2NhcmRfX2lucHV0cy1pbnB1dC5hY3RpdmUgKyBsYWJlbCB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNnB4KSBzY2FsZSgwLjYpOyB9XG4gICAgICAgIC5jYXJkc19fY2FyZF9faW5wdXRzLWlucHV0OmZvY3VzIHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgYmxhY2s7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkX19pbnB1dHMtaW5wdXQ6aW52YWxpZCB7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHJlZDsgfVxuICAgICAgLmNhcmRzX19jYXJkX19pbnB1dHMgdGV4dGFyZWEge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7IH1cbiAgICAgIC5jYXJkc19fY2FyZF9faW5wdXRzIGxhYmVsIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIC4ycyBlYXNlLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gLjJzIGVhc2Utb3V0O1xuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAuMnMgZWFzZS1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIC4ycyBlYXNlLW91dDtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycyBlYXNlLW91dCwgY29sb3IgLjJzIGVhc2Utb3V0O1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIGVhc2Utb3V0LCBjb2xvciAuMnMgZWFzZS1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIC4ycyBlYXNlLW91dDtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiAwJSAxMDAlO1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAwJSAxMDAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBpbml0aWFsO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoOHB4KTsgfVxuICAgICAgLmNhcmRzX19jYXJkX19pbnB1dHMgYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgcGFkZGluZzogOHB4IDRweDtcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRyYW5zaXRpb246IDAuM3M7XG4gICAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkX19pbnB1dHMgYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogYmxhY2s7IH1cbiAgICAuY2FyZHNfX2NhcmQtLW5vcm1hbCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzX19jYXJkLS1ub3JtYWwge1xuICAgICAgICAgIGhlaWdodDogNTA1cHg7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgIC5jYXJkc19fY2FyZC0tdGFsbCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzX19jYXJkLS10YWxsIHtcbiAgICAgICAgICBoZWlnaHQ6IDc1MHB4O1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAuY2FyZHNfX2NhcmQtc2l6ZXIge1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMi41cHgpOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcbiAgICAgICAgLmNhcmRzX19jYXJkLXNpemVyIHtcbiAgICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAyLjVweCk7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkc19fY2FyZC1zaXplciB7XG4gICAgICAgICAgd2lkdGg6IGNhbGMoNSUgLSA1cHgpOyB9IH1cbiAgICAuY2FyZHNfX2NhcmQtLWNvbnRlbnQge1xuICAgICAgbWl4LWJsZW5kLW1vZGU6IHVuc2V0O1xuICAgICAgcGFkZGluZzogMCAyMHB4O1xuICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgaGVpZ2h0OiBhdXRvOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzX19jYXJkLS1jb250ZW50IHtcbiAgICAgICAgICBoZWlnaHQ6IDUwNXB4OyB9IH1cbiAgICAgIC5jYXJkc19fY2FyZC0tY29udGVudC1hdXRvIHtcbiAgICAgICAgaGVpZ2h0OiBhdXRvOyB9XG4gICAgLmNhcmRzX19jYXJkLWxpbmsge1xuICAgICAgY29sb3I6ICM0NDQ7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIHBhZGRpbmc6IDJweCAycHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAgIC5jYXJkc19fY2FyZC1saW5rOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgYm90dG9tOiAzcHg7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjNDQ0O1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIHRyYW5zaXRpb246IDAuNTNzOyB9XG4gICAgICAuY2FyZHNfX2NhcmQtbGluazpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICBib3R0b206IDNweDtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiA4MSU7XG4gICAgICAgIGJhY2tncm91bmQ6ICM0NDQ7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgdHJhbnNpdGlvbjogMC4zcztcbiAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW47IH1cbiAgICAgIC5jYXJkc19fY2FyZC1saW5rOmhvdmVyOmJlZm9yZSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKDZweCk7IH1cbiAgICAgIC5jYXJkc19fY2FyZC1saW5rLS1hbHQge1xuICAgICAgICBjb2xvcjogIzQ0NDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkLWxpbmstLWFsdDpiZWZvcmUsIC5jYXJkc19fY2FyZC1saW5rLS1hbHQ6YWZ0ZXIge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuY2FyZHNfX2NhcmQtdGl0bGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgIGZvbnQtc2l6ZTogMmVtOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzX19jYXJkLXRpdGxlIHtcbiAgICAgICAgICBmb250LXNpemU6IDNlbTsgfSB9XG4gICAgICAuY2FyZHNfX2NhcmQtdGl0bGUtLWJpZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogM2VtOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xuICAgICAgICAgIC5jYXJkc19fY2FyZC10aXRsZS0tYmlnIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNGVtOyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgICAgLmNhcmRzX19jYXJkLXRpdGxlLS1iaWcge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzLjdlbTsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDMwcHgpIHtcbiAgICAgICAgICAuY2FyZHNfX2NhcmQtdGl0bGUtLWJpZyB7XG4gICAgICAgICAgICBmb250LXNpemU6IDQuN2VtOyB9IH1cbiAgICAgIC5jYXJkc19fY2FyZC10aXRsZS0tcG9ydGZvbGlvIHtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwOyB9XG4gICAgICAgIC5jYXJkc19fY2FyZC10aXRsZS0tcG9ydGZvbGlvIHNwYW4ge1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNDAwcHgpIHtcbiAgICAgICAgICAuY2FyZHNfX2NhcmQtdGl0bGUtLXBvcnRmb2xpbyB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIuNWVtOyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gICAgICAgICAgLmNhcmRzX19jYXJkLXRpdGxlLS1wb3J0Zm9saW8ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzLjZlbTsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAgICAgICAgIC5jYXJkc19fY2FyZC10aXRsZS0tcG9ydGZvbGlvIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMy43ZW07IH0gfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAzMHB4KSB7XG4gICAgICAgICAgLmNhcmRzX19jYXJkLXRpdGxlLS1wb3J0Zm9saW8ge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0LjdlbTsgfSB9XG4gICAgICAgIC5jYXJkc19fY2FyZC10aXRsZS0tcG9ydGZvbGlvIHN1YiB7XG4gICAgICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdvcmQtYnJlYWs6IG5vcm1hbDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYm90dG9tOiAtMzVweDsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xuICAgICAgICAgICAgLmNhcmRzX19jYXJkLXRpdGxlLS1wb3J0Zm9saW8gc3ViIHtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMCU7XG4gICAgICAgICAgICAgIGJvdHRvbTogLTE1cHg7XG4gICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgICAgICByaWdodDogMDsgfSB9XG4gICAgICAgIC5jYXJkc19fY2FyZC10aXRsZS0tcG9ydGZvbGlvLXNpbmdsZSB7XG4gICAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG4gICAgICAuY2FyZHNfX2NhcmQtdGl0bGUtLXNtYWxsIHtcbiAgICAgICAgZm9udC1zaXplOiA0MCU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3b3JkLWJyZWFrOiBub3JtYWw7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICBib3R0b206IDE1cHg7IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDUwMHB4KSB7XG4gICAgICAgICAgLmNhcmRzX19jYXJkLXRpdGxlLS1zbWFsbCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDMwJTtcbiAgICAgICAgICAgIGJvdHRvbTogMTVweDtcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvOyB9IH1cbiAgICAuY2FyZHNfX2NhcmQtaW1hZ2Uge1xuICAgICAgbWl4LWJsZW5kLW1vZGU6IHVuc2V0OyB9XG4gICAgICAuY2FyZHNfX2NhcmQtaW1hZ2U6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9heWxpbi5qcGcpO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKC0xKTtcbiAgICAgICAgZmlsdGVyOiBGbGlwSDtcbiAgICAgICAgLW1zLWZpbHRlcjogXCJGbGlwSFwiO1xuICAgICAgICBsZWZ0OiA1cHg7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMHB4KTtcbiAgICAgICAgYm90dG9tOiA1cHg7XG4gICAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTBweCk7XG4gICAgICAgIHRvcDogNXB4O1xuICAgICAgICByaWdodDogNXB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cbiAgICAgIC5jYXJkc19fY2FyZC1pbWFnZS0tcG9ydGZvbGlvLXNpbmdsZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkLWltYWdlLS1wb3J0Zm9saW8tc2luZ2xlOmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICAuY2FyZHNfX2NhcmQtaW1hZ2UtLXNjYXJmOmFmdGVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9wb3J0Zm9saW8vU2NhcmYuanBnKTtcbiAgICAgICAgZmlsdGVyOiBub25lO1xuICAgICAgICAtbXMtZmlsdGVyOiBcIm5vbmVcIjtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMSk7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDE1JTsgfVxuICAgICAgLmNhcmRzX19jYXJkLWltYWdlIGltZyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICAuY2FyZHNfX2NhcmQtaW1hZ2UgaW1nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgICAgLmNhcmRzX19jYXJkLWltYWdlLXNpbmdsZSB7XG4gICAgICAgIHotaW5kZXg6IDMzO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL3BvcnRmb2xpby9Qb3J0Zi5qcGcpO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIGxlZnQ6IDVweDtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwcHgpO1xuICAgICAgICBib3R0b206IDVweDtcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxMHB4KTtcbiAgICAgICAgdG9wOiA1cHg7XG4gICAgICAgIHJpZ2h0OiA1cHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuICAgIC5jYXJkc19fY2FyZC1wb3J0Zm9saW8taXRlbS1uYW1lIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICAgIGxlZnQ6IC01cHg7XG4gICAgICBib3R0b206IC01cHg7XG4gICAgICBwYWRkaW5nOiAzcHggMjBweCAwcHg7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cbiAgICAuY2FyZHNfX2NhcmQtaXRlbSB7XG4gICAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICB6LWluZGV4OiAyO1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKCk7IH1cbiAgICAgIC5jYXJkc19fY2FyZC1pdGVtLWZsaXBwZXIge1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjZzO1xuICAgICAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xuICAgICAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7IH1cbiAgICAgIC5jYXJkc19fY2FyZC1pdGVtOmhvdmVyLCAuY2FyZHNfX2NhcmQtaXRlbTpmb2N1cyB7XG4gICAgICAgIG1peC1ibGVuZC1tb2RlOiBzY3JlZW47IH1cbiAgICAgICAgLmNhcmRzX19jYXJkLWl0ZW06aG92ZXIgLmNhcmRzX19jYXJkLWl0ZW0tZmxpcHBlciwgLmNhcmRzX19jYXJkLWl0ZW06Zm9jdXMgLmNhcmRzX19jYXJkLWl0ZW0tZmxpcHBlciB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZykgc2NhbGUoMC44MSk7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkLWl0ZW06aG92ZXIgLmNhcmRzX19jYXJkLWl0ZW0tYmFjay10ZXh0LCAuY2FyZHNfX2NhcmQtaXRlbTpmb2N1cyAuY2FyZHNfX2NhcmQtaXRlbS1iYWNrLXRleHQge1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7IH1cbiAgICAgIC5jYXJkc19fY2FyZC1pdGVtLS1kaXNhYmxlZCB7XG4gICAgICAgIGN1cnNvcjogZGVmYXVsdDsgfVxuICAgICAgLmNhcmRzX19jYXJkLWl0ZW0tZnJvbnQsIC5jYXJkc19fY2FyZC1pdGVtLWJhY2sge1xuICAgICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA1cHg7XG4gICAgICAgIGxlZnQ6IDVweDsgfVxuICAgICAgLmNhcmRzX19jYXJkLWl0ZW0tZnJvbnQge1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogZGFya2VuO1xuICAgICAgICBsZWZ0OiA1cHg7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMHB4KTtcbiAgICAgICAgYm90dG9tOiA1cHg7XG4gICAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTBweCk7XG4gICAgICAgIHRvcDogNXB4O1xuICAgICAgICByaWdodDogNXB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHotaW5kZXg6IDI7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkLWl0ZW0tZnJvbnQtLWNvbnRhaW4ge1xuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4gICAgICAuY2FyZHNfX2NhcmQtaXRlbS1iYWNrIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwcHgpO1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMTBweCk7IH1cbiAgICAgICAgLmNhcmRzX19jYXJkLWl0ZW0tYmFjay10ZXh0IHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMDEpO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICBmb250LXdlaWdodDogODAwO1xuICAgICAgICAgIGNvbG9yOiBibGFjazsgfVxuICAgICAgICAgIC5jYXJkc19fY2FyZC1pdGVtLWJhY2stdGV4dCBhIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmNhcmRzX19jYXJkLS1ob21lIHtcbiAgICAgIG1peC1ibGVuZC1tb2RlOiBzY3JlZW47IH1cbiAgICAgIC5jYXJkc19fY2FyZC0taG9tZSAuY2FyZHNfX2NhcmQtaXRlbS1mbGlwcGVyIHtcbiAgICAgICAgd2lsbC1jaGFuZ2U6IHVuc2V0OyB9XG4gICAgICAuY2FyZHNfX2NhcmQtLWhvbWUgLmNhcmRzX19jYXJkLWl0ZW0tYmFjayB7XG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICAgICAgLmNhcmRzX19jYXJkLS1ob21lIC5jYXJkc19fY2FyZC1pdGVtLWJhY2stdGV4dCB7XG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICAgICAgLmNhcmRzX19jYXJkLS1ob21lOmhvdmVyIC5jYXJkc19fY2FyZC1pdGVtLWZsaXBwZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOSk7IH1cbiAgLmNhcmRzLmNhcmRzLS1ncmlkIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0bztcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcIkhlYWRpbmdcIiBcIlNsaWRlclwiIFwiUG9ydGZvbGlvMVwiIFwiUG9ydGZvbGlvMlwiIFwiUG9ydGZvbGlvM1wiIFwiUG9ydGZvbGlvNFwiO1xuICAgIGdyaWQtZ2FwOiAxMHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAuY2FyZHMuY2FyZHMtLWdyaWQge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyIDFmcjtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyIDFmcjtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJIZWFkaW5nIEhlYWRpbmcgSGVhZGluZyBIZWFkaW5nXCIgXCJTbGlkZXIgU2xpZGVyIFBvcnRmb2xpbzEgUG9ydGZvbGlvMlwiIFwiU2xpZGVyIFNsaWRlciBQb3J0Zm9saW8zIFBvcnRmb2xpbzRcIjsgfSB9XG4gICAgLmNhcmRzLmNhcmRzLS1ncmlkIC5jYXJkc19fY2FyZCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICAuY2FyZHMuY2FyZHMtLWdyaWQgLmNhcmQtLWhlYWRpbmcge1xuICAgICAgZ3JpZC1hcmVhOiBIZWFkaW5nOyB9XG4gICAgLmNhcmRzLmNhcmRzLS1ncmlkIC5jYXJkLS1zbGlkZXIge1xuICAgICAgZ3JpZC1hcmVhOiBTbGlkZXI7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzLmNhcmRzLS1ncmlkIC5jYXJkLS1zbGlkZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAuY2FyZHMuY2FyZHMtLWdyaWQgLmNhcmQtLXBvcnRmb2xpby1pdGVtLTEge1xuICAgICAgZ3JpZC1hcmVhOiBQb3J0Zm9saW8xOyB9XG4gICAgLmNhcmRzLmNhcmRzLS1ncmlkIC5jYXJkLS1wb3J0Zm9saW8taXRlbS0yIHtcbiAgICAgIGdyaWQtYXJlYTogUG9ydGZvbGlvMjsgfVxuICAgIC5jYXJkcy5jYXJkcy0tZ3JpZCAuY2FyZC0tcG9ydGZvbGlvLWl0ZW0tMyB7XG4gICAgICBncmlkLWFyZWE6IFBvcnRmb2xpbzM7IH1cbiAgICAuY2FyZHMuY2FyZHMtLWdyaWQgLmNhcmQtLXBvcnRmb2xpby1pdGVtLTQge1xuICAgICAgZ3JpZC1hcmVhOiBQb3J0Zm9saW80OyB9XG4gICAgLmNhcmRzLmNhcmRzLS1ncmlkIC5zbGljay1saXN0LCAuY2FyZHMuY2FyZHMtLWdyaWQgLnNsaWNrLXRyYWNrLCAuY2FyZHMuY2FyZHMtLWdyaWQgLnNsaWNrLXNsaWRlID4gZGl2IHtcbiAgICAgIGhlaWdodDogMTAwJTsgfVxuICAgIC5jYXJkcy5jYXJkcy0tZ3JpZCAuc2xpZGVyX19pbWFnZSB7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAuY2FyZHMuY2FyZHMtLWdyaWQgLnNsaWRlcl9faW1hZ2UgLmNhcHRpb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICBib3R0b206IDBweDtcbiAgICAgICAgcGFkZGluZzogM3B4IDIwcHggMDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDsgfVxuICAgIC5jYXJkcy5jYXJkcy0tZ3JpZCAuc2xpY2stbmV4dCwgLmNhcmRzLmNhcmRzLS1ncmlkIC5zbGljay1wcmV2IHtcbiAgICAgIHdpZHRoOiA0NXB4O1xuICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgICAgYm90dG9tOiA1cHg7XG4gICAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgICB0b3A6IGF1dG87IH1cbiAgICAgIC5jYXJkcy5jYXJkcy0tZ3JpZCAuc2xpY2stbmV4dDpiZWZvcmUsIC5jYXJkcy5jYXJkcy0tZ3JpZCAuc2xpY2stcHJldjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAn4oa8JztcbiAgICAgICAgZm9udC1mYW1pbHk6IHBvcHBpbnMsIGhlbHZldGljYSwgYXJpYWw7XG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDsgfVxuICAgIC5jYXJkcy5jYXJkcy0tZ3JpZCAuc2xpY2stcHJldiB7XG4gICAgICByaWdodDogNTVweDtcbiAgICAgIGxlZnQ6IGF1dG87XG4gICAgICB6LWluZGV4OiAxMDsgfVxuICAgIC5jYXJkcy5jYXJkcy0tZ3JpZCAuc2xpY2stbmV4dCB7XG4gICAgICByaWdodDogNXB4OyB9XG4gICAgICAuY2FyZHMuY2FyZHMtLWdyaWQgLnNsaWNrLW5leHQ6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJ+KHgCc7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBwb3BwaW5zLCBoZWx2ZXRpY2EsIGFyaWFsO1xuICAgICAgICBmb250LXNpemU6IDIycHg7IH1cbiAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8ge1xuICAgIG1heC13aWR0aDogMTE0MHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAuY2FyZHMuY2FyZHMtLXBvcnRmb2xpbyAuaW1hZ2UtYXJlYSB7XG4gICAgICAgIGdyaWQtYXJlYTogaW1hZ2U7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLmNvbnRlbnQtYXJlYSB7XG4gICAgICAgIGdyaWQtYXJlYTogY29udGVudDsgfSB9XG4gICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS0xIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcbiAgICAgIGdyaWQtZ2FwOiAxMHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTBweDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tMSB7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImltYWdlIGltYWdlIGNvbnRlbnRcIjsgfSB9XG4gICAgICAuY2FyZHMuY2FyZHMtLXBvcnRmb2xpbyAucG9ydGZvbGlvLWdyaWQtLTEgLmNhcmRzX19jYXJkIHtcbiAgICAgICAgbWF4LWhlaWdodDogNDAwcHg7IH1cbiAgICAuY2FyZHMuY2FyZHMtLXBvcnRmb2xpbyAucG9ydGZvbGlvLWdyaWQtLTIge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgICAgZ3JpZC1nYXA6IDEwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4OyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS0yIHtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiY29udGVudCBpbWFnZSBpbWFnZVwiOyB9IH1cbiAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tMiAuY2FyZHNfX2NhcmQge1xuICAgICAgICBtYXgtaGVpZ2h0OiA0MDBweDsgfVxuICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tMyB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gICAgICBncmlkLWdhcDogMTBweDtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAgICAgICAuY2FyZHMuY2FyZHMtLXBvcnRmb2xpbyAucG9ydGZvbGlvLWdyaWQtLTMge1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJpbWFnZTEgaW1hZ2UyIGNvbnRlbnRcIjsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS0zIC5pbWFnZS1hcmVhOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgICBncmlkLWFyZWE6IGltYWdlMTsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS0zIC5pbWFnZS1hcmVhOm50aC1vZi10eXBlKDIpIHtcbiAgICAgICAgICBncmlkLWFyZWE6IGltYWdlMjsgfSB9XG4gICAgICAuY2FyZHMuY2FyZHMtLXBvcnRmb2xpbyAucG9ydGZvbGlvLWdyaWQtLTMgLmNhcmRzX19jYXJkIHtcbiAgICAgICAgbWF4LWhlaWdodDogNTAwcHg7IH1cbiAgICAuY2FyZHMuY2FyZHMtLXBvcnRmb2xpbyAucG9ydGZvbGlvLWdyaWQtLTQge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xuICAgICAgZ3JpZC1nYXA6IDEwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4OyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS00IHtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiY29udGVudCBpbWFnZTEgaW1hZ2UyXCI7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tNCAuaW1hZ2UtYXJlYTpudGgtb2YtdHlwZSgxKSB7XG4gICAgICAgICAgZ3JpZC1hcmVhOiBpbWFnZTE7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tNCAuaW1hZ2UtYXJlYTpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgICAgZ3JpZC1hcmVhOiBpbWFnZTI7IH0gfVxuICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS00IC5jYXJkc19fY2FyZCB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDUwMHB4OyB9XG4gICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS01IHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcbiAgICAgIGdyaWQtZ2FwOiAxMHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTBweDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tNSB7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImltYWdlMSBpbWFnZTEgaW1hZ2UyXCI7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tNSAuaW1hZ2UtYXJlYTpudGgtb2YtdHlwZSgxKSB7XG4gICAgICAgICAgZ3JpZC1hcmVhOiBpbWFnZTE7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5wb3J0Zm9saW8tZ3JpZC0tNSAuaW1hZ2UtYXJlYTpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgICAgZ3JpZC1hcmVhOiBpbWFnZTI7IH0gfVxuICAgICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLnBvcnRmb2xpby1ncmlkLS01IC5jYXJkc19fY2FyZCB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDUwMHB4OyB9XG4gICAgLmNhcmRzLmNhcmRzLS1wb3J0Zm9saW8gLmNhcmRzX19jYXJkIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5jYXJkc19fY2FyZCAuY2FwdGlvbiB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHBhZGRpbmc6IDNweCAyMHB4IDA7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cbiAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5jYXJkc19fY2FyZC52aWRlbyB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDU2LjI1JTtcbiAgICAgICAgLyogMTY6OSAqL1xuICAgICAgICBwYWRkaW5nLXRvcDogMjVweDtcbiAgICAgICAgaGVpZ2h0OiAwOyB9XG4gICAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5jYXJkc19fY2FyZC52aWRlbyBpZnJhbWUge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAgIC5jYXJkcy5jYXJkcy0tcG9ydGZvbGlvIC5jYXJkc19fY2FyZCBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4OyB9XG5cbmNhbnZhcyB7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50OyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0ZvbnQtTmFtZSc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9mb250LW5hbWUuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLnN2ZyNmb250LW5hbWVcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IDkwMDsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6LXdlYmtpdC1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuLmFuaW1hdGVkIHtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjhzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBiYWNrd2FyZHM7IH1cblxuQGtleWZyYW1lcyBib3VuY2VJbiB7XG4gIGZyb20sXG4gIDIwJSxcbiAgNDAlLFxuICA2MCUsXG4gIDgwJSxcbiAgdG8ge1xuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjIxNSwgMC42MSwgMC4zNTUsIDEpOyB9XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTsgfVxuICAyMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLjEsIDEuMSwgMS4xKTsgfVxuICA0MCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjksIDAuOSwgMC45KTsgfVxuICA2MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEuMDMsIDEuMDMsIDEuMDMpOyB9XG4gIDgwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuOTcsIDAuOTcsIDAuOTcpOyB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTsgfSB9XG5cbi5ib3VuY2VJbiB7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC43NXM7XG4gIGFuaW1hdGlvbi1uYW1lOiBib3VuY2VJbjsgfVxuXG5Aa2V5ZnJhbWVzIHNsaWRlSW5SaWdodCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTYwJSwgMCwgMCk7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuLnNsaWRlSW5SaWdodCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZUluUmlnaHQ7IH1cblxuQGtleWZyYW1lcyB6b29tSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC4zKTsgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfSB9XG5cbkBrZXlmcmFtZXMgem9vbUluLWFsdCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgyKTsgfVxuICA1MCUge1xuICAgIG9wYWNpdHk6IDAuNjsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgY29sb3I6ICM2NjY7IH0gfVxuXG4uem9vbUluIHtcbiAgYW5pbWF0aW9uLW5hbWU6IHpvb21JbjsgfVxuXG4uem9vbUluLWFsdCB7XG4gIGFuaW1hdGlvbi1uYW1lOiB6b29tSW4tYWx0O1xuICBhbmltYXRpb24tZHVyYXRpb246IDFzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoOyB9XG5cbkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDsgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbi5mYWRlSW4ge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluOyB9XG5cbkBrZXlmcmFtZXMgYXJyb3ctYW5pbSB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuICA1JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0wLjFyZW0pOyB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxcmVtKTtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQGtleWZyYW1lcyBhcnJvdy1maXhlZC1hbmltIHtcbiAgNSUge1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgMjAlIHtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbkBrZXlmcmFtZXMgZmFkZUluRG93biB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAyMCUsIDApOyB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7IH0gfVxuXG4uZmFkZUluRG93biB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duOyB9XG5cbi8qKlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIGFuaW1hdGlvbiBmYWRlLWluLWZ3ZFxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqL1xuQGtleWZyYW1lcyBmYWRlLWluLWZ3ZCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gICAgb3BhY2l0eTogMDsgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG4uZmFkZS1pbi1md2Qge1xuICBhbmltYXRpb246IGZhZGUtaW4tZndkIDAuNnMgY3ViaWMtYmV6aWVyKDAuMzksIDAuNTc1LCAwLjU2NSwgMSkgYm90aDsgfVxuXG5Aa2V5ZnJhbWVzIGZsaXBJblkge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDYwMHB4KSByb3RhdGUzZCgwLCAxLCAwLCA5MGRlZyk7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbjtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDQwJSB7XG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg2MDBweCkgcm90YXRlM2QoMCwgMSwgMCwgLTIwZGVnKTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluOyB9XG4gIDYwJSB7XG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg2MDBweCkgcm90YXRlM2QoMCwgMSwgMCwgMTBkZWcpO1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgODAlIHtcbiAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDYwMHB4KSByb3RhdGUzZCgwLCAxLCAwLCAtNWRlZyk7IH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoNjAwcHgpOyB9IH1cblxuLmZsaXBJblkge1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG4gIGFuaW1hdGlvbi1uYW1lOiBmbGlwSW5ZOyB9XG5cbi5kZXNpZ25lZC1ieSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gICAgLmRlc2lnbmVkLWJ5IHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgei1pbmRleDogMjIyMjtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICByaWdodDogMTVweDtcbiAgICAgIGJvdHRvbTogMTVweDtcbiAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBmb250LXNpemU6IDIxcHg7XG4gICAgICBtaXgtYmxlbmQtbW9kZTogc2NyZWVuO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9IH1cbiAgLmRlc2lnbmVkLWJ5IHNwYW4ge1xuICAgIGNvbG9yOiAjNjY2OyB9XG5cbkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiOyB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7IH1cbiAgLmlyIGE6YWZ0ZXIsXG4gIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtOyB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7IH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XG4iLCIqIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xyXG59XHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogNjIuNSU7XHJcbn1cclxuYm9keSB7XHJcbiAgZm9udDogMzAwIDEzcHgvMS42ICdQb3BwaW5zJywgSGVsdmV0aWNhLCBBcmlhbDtcclxuICBjb2xvcjogIzQ0NDtcclxuICB0cmFuc2l0aW9uOiBhbGwgLjRzIC4zcyBlYXNlLWluO1xyXG4gIEBtZWRpYSAobWluLWhlaWdodDogNjAwcHgpIGFuZChtaW4td2lkdGg6IDEwMzBweCkge1xyXG4gICAgLy9vdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxufVxyXG5ib2R5LGh0bWx7XHJcblx0bWluLWhlaWdodDogMTAwdmg7XHJcblx0Ly9vdmVyZmxvdzogaGlkZGVuO1xyXG59IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxyXG4gKi9cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXHJcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXHJcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gKi9cclxuXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5kZXRhaWxzLCAvKiAxICovXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbm1haW4sIC8qIDIgKi9cclxubWVudSxcclxubmF2LFxyXG5zZWN0aW9uLFxyXG5zdW1tYXJ5IHsgLyogMSAqL1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxuYXVkaW8sXHJcbmNhbnZhcyxcclxucHJvZ3Jlc3MsXHJcbnZpZGVvIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxyXG4gKi9cclxuXHJcbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cclxuXHJcbnByb2dyZXNzIHtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gKi9cclxuXHJcbnRlbXBsYXRlLCAvKiAxICovXHJcbltoaWRkZW5dIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKiBMaW5rc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gKi9cclxuXHJcbmEge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXHJcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXHJcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuXHJcbmE6YWN0aXZlLFxyXG5hOmhvdmVyIHtcclxuICBvdXRsaW5lLXdpZHRoOiAwO1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cclxuICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXHJcbiAqL1xyXG5cclxuZGZuIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuaDEge1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG4gIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxubWFyayB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcclxuICBjb2xvcjogIzAwMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnNtYWxsIHtcclxuICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG5zdXAge1xyXG4gIHRvcDogLTAuNWVtO1xyXG59XHJcblxyXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXHJcbiAqL1xyXG5cclxuaW1nIHtcclxuICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICovXHJcblxyXG5zdmc6bm90KDpyb290KSB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLyogR3JvdXBpbmcgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5jb2RlLFxyXG5rYmQsXHJcbnByZSxcclxuc2FtcCB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cclxuICovXHJcblxyXG5maWd1cmUge1xyXG4gIG1hcmdpbjogMWVtIDQwcHg7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcblxyXG5ociB7XHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cclxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKiBGb3Jtc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xyXG4gIG1hcmdpbjogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xyXG5cclxub3B0Z3JvdXAge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCB7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3QgeyAvKiAxICovXHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcclxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xyXG5bdHlwZT1cInJlc2V0XCJdLFxyXG5bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cclxuXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcclxuICBtYXJnaW46IDAgMnB4O1xyXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXHJcbiAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxyXG4gKi9cclxuXHJcblt0eXBlPVwiY2hlY2tib3hcIl0sXHJcblt0eXBlPVwicmFkaW9cIl0ge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBwYWRkaW5nOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXHJcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cclxuICovXHJcblxyXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIG9wYWNpdHk6IDAuNTQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuIiwiLmhlYWRlciB7XHJcblxyXG59XHJcbi5sb2dvIHtcclxuICBtYXJnaW46IC01OHB4IDAgMCAtMTAwcHg7XHJcbiAgQGluY2x1ZGUgcG9zaXRpb24oYWJzb2x1dGUsIDUwJSAwIDAgNTAlKTtcclxuICBpbWcge1xyXG5cclxuICB9XHJcbn1cclxuIiwiQG1peGluIHBvc2l0aW9uICgkcG9zaXRpb246IHJlbGF0aXZlLCAkY29vcmRpbmF0ZXM6IDAgMCAwIDApIHtcclxuICAgIEBpZiB0eXBlLW9mKCRwb3NpdGlvbikgPT0gbGlzdCB7XHJcbiAgICAgICAgJGNvb3JkaW5hdGVzOiAkcG9zaXRpb247XHJcbiAgICAgICAgJHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuXHJcbiAgICAkdG9wOiBudGgoJGNvb3JkaW5hdGVzLCAxKTtcclxuICAgICRyaWdodDogbnRoKCRjb29yZGluYXRlcywgMik7XHJcbiAgICAkYm90dG9tOiBudGgoJGNvb3JkaW5hdGVzLCAzKTtcclxuICAgICRsZWZ0OiBudGgoJGNvb3JkaW5hdGVzLCA0KTtcclxuXHJcbiAgICBwb3NpdGlvbjogJHBvc2l0aW9uO1xyXG5cclxuICAgIEBpZiAkdG9wID09IGF1dG8ge1xyXG4gICAgICAgIHRvcDogJHRvcDtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkdG9wKSkge1xyXG4gICAgICAgIHRvcDogJHRvcDtcclxuICAgIH1cclxuICAgIEBpZiAkcmlnaHQgPT0gYXV0byB7XHJcbiAgICAgICAgcmlnaHQ6ICRyaWdodDtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkcmlnaHQpKSB7XHJcbiAgICAgICAgcmlnaHQ6ICRyaWdodDtcclxuICAgIH1cclxuICAgIEBpZiAkYm90dG9tID09IGF1dG8ge1xyXG4gICAgICAgIGJvdHRvbTogJGJvdHRvbTtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkYm90dG9tKSkge1xyXG4gICAgICAgIGJvdHRvbTogJGJvdHRvbTtcclxuICAgIH1cclxuICAgIEBpZiAkbGVmdCA9PSBhdXRvIHtcclxuICAgICAgICBsZWZ0OiAkbGVmdDtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkbGVmdCkpIHtcclxuICAgICAgICBsZWZ0OiAkbGVmdDtcclxuICAgIH1cclxufVxyXG4iLCIubmF2IHtcclxuICB1bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgbGkge1xyXG4gICAgICBhIHtcclxuXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLmNvbnRlbnQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXgtd2lkdGg6IDkwJTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgei1pbmRleDogNTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIC8vbWl4LWJsZW5kLW1vZGU6IGxpZ2h0ZW47XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxuLmJhY2stYXJyb3cge1xyXG4gICRlYXNlOiBjdWJpYy1iZXppZXIoLjIsMSwuMywxKTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgei1pbmRleDogMjIyMjtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIHBhZGRpbmc6IDRweDtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWl4LWJsZW5kLW1vZGU6IHVuc2V0O1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsMC44KTtcclxuXHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDIyMjI7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGxlZnQ6IDE1cHg7XHJcbiAgICBib3R0b206IDE1cHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAyMXB4O1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IHNjcmVlbjtcclxuICB9XHJcbiAgc3BhbiB7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIHRyYW5zaXRpb246IGFsbCAxcyAkZWFzZTtcclxuICB9XHJcbiAgJjpob3ZlciB7XHJcbiAgICBzcGFuIHtcclxuICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgfVxyXG4gIH1cclxuICBzdmcge1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgLy9tYXJnaW46IDAgMnJlbTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gICAgcG9seWdvbiwgcGF0aCB7XHJcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzICRlYXNlO1xyXG4gICAgICBmaWxsOiAjNjY2O1xyXG4gICAgfVxyXG5cclxuICB9XHJcbiAgJjpob3ZlciBzdmcgcG9seWdvbiwgJjpob3ZlciBwYXRoIHtcclxuICAgIHRyYW5zaXRpb246IGFsbCAxcyAkZWFzZTtcclxuICAgIGZpbGw6ICMwMDA7XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyIHN2ZyAuYXJyb3cge1xyXG4gICAgYW5pbWF0aW9uOiBhcnJvdy1hbmltIDIuNXMgJGVhc2UgaW5maW5pdGU7XHJcbiAgfVxyXG4gICY6aG92ZXIgc3ZnIC5hcnJvdy1maXhlZCB7XHJcbiAgICBhbmltYXRpb246IGFycm93LWZpeGVkLWFuaW0gMi41cyAkZWFzZSBpbmZpbml0ZTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuLy8gU3R1cGlkIG92ZXJyaWRlXHJcbi5saXR5LWltYWdlIGltZyB7XHJcbiAgcGFkZGluZzogMjBweCAwO1xyXG59XHJcblxyXG5cclxuIiwiY2FudmFzIHtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcclxuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xyXG5cclxufSIsIi8vJHByaW1hcnktZm9udDogICdQb3BwaW5zJywgc2Fucy1zZXJpZjtcclxuXHJcblxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdGb250LU5hbWUnO1xyXG4gIHNyYzogdXJsKCcuLi9mb250cy9mb250LW5hbWUuZW90Jyk7XHJcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL2ZvbnQtbmFtZS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxyXG4gICAgICAgdXJsKCcuLi9mb250cy9mb250LW5hbWUud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4gICAgICAgdXJsKCcuLi9mb250cy9mb250LW5hbWUudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxyXG4gICAgICAgdXJsKCcuLi9mb250cy9mb250LW5hbWUuc3ZnI2ZvbnQtbmFtZScpIGZvcm1hdCgnc3ZnJyk7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcblxyXG5cclxuc3Ryb25nIHtcclxuICBmb250LXdlaWdodDogOTAwO1xyXG59XHJcbiIsIjo6c2VsZWN0aW9ue1xyXG4gIGJhY2tncm91bmQ6ICMzMzM7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuOjotbW96LXNlbGVjdGlvbntcclxuICBiYWNrZ3JvdW5kOiAjMzMzO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIHRleHQtc2hhZG93OiBub25lO1xyXG59XHJcbjo6LXdlYmtpdC1zZWxlY3Rpb257XHJcbiAgYmFja2dyb3VuZDogIzMzMztcclxuICBjb2xvcjogI2ZmZjtcclxuICB0ZXh0LXNoYWRvdzogbm9uZTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLmFuaW1hdGVkIHtcclxuICBhbmltYXRpb24tZHVyYXRpb246IDAuOHM7XHJcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYmFja3dhcmRzO1xyXG59XHJcblxyXG5cclxuXHJcbkBrZXlmcmFtZXMgYm91bmNlSW4ge1xyXG4gIGZyb20sXHJcbiAgMjAlLFxyXG4gIDQwJSxcclxuICA2MCUsXHJcbiAgODAlLFxyXG4gIHRvIHtcclxuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjIxNSwgMC42MSwgMC4zNTUsIDEpO1xyXG4gIH1cclxuXHJcbiAgMCUge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgwLjMsIDAuMywgMC4zKTtcclxuICB9XHJcblxyXG4gIDIwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4xLCAxLjEsIDEuMSk7XHJcbiAgfVxyXG5cclxuICA0MCUge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuOSwgMC45LCAwLjkpO1xyXG4gIH1cclxuXHJcbiAgNjAlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4wMywgMS4wMywgMS4wMyk7XHJcbiAgfVxyXG5cclxuICA4MCUge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAuOTcsIDAuOTcsIDAuOTcpO1xyXG4gIH1cclxuXHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTtcclxuICB9XHJcbn1cclxuLmJvdW5jZUluIHtcclxuICBhbmltYXRpb24tZHVyYXRpb246IDAuNzVzO1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBib3VuY2VJbjtcclxufVxyXG5cclxuQGtleWZyYW1lcyBzbGlkZUluUmlnaHQge1xyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNjAlLCAwLCAwKTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG5cclxuICB0byB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbi5zbGlkZUluUmlnaHQge1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZUluUmlnaHQ7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgem9vbUluIHtcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMyk7XHJcbiAgfVxyXG5cclxuICA1MCUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyB6b29tSW4tYWx0IHtcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDIpO1xyXG4gIH1cclxuXHJcbiAgNTAlIHtcclxuICAgIG9wYWNpdHk6IDAuNjtcclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgIGNvbG9yOiAjNjY2O1xyXG4gIH1cclxufVxyXG5cclxuLnpvb21JbiB7XHJcbiAgYW5pbWF0aW9uLW5hbWU6IHpvb21JbjtcclxufVxyXG5cclxuLnpvb21Jbi1hbHQge1xyXG4gIGFuaW1hdGlvbi1uYW1lOiB6b29tSW4tYWx0O1xyXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcclxufVxyXG5cclxuQGtleWZyYW1lcyBmYWRlSW4ge1xyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuLmZhZGVJbiB7XHJcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcclxuICAvL2FuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcclxufVxyXG5cclxuXHJcbkBrZXlmcmFtZXMgYXJyb3ctYW5pbSB7XHJcbiAgMCUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuICB9XHJcbiAgNSUge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0wLjFyZW0pO1xyXG4gIH1cclxuICAxMDAlIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxcmVtKTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGFycm93LWZpeGVkLWFuaW0ge1xyXG4gIDUlIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIDIwJSB7XHJcbiAgICBvcGFjaXR5OiAwLjQ7XHJcbiAgfVxyXG4gIDEwMCUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbkRvd24ge1xyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMjAlLCAwKTtcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gIH1cclxufVxyXG5cclxuLmZhZGVJbkRvd24ge1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duO1xyXG59XHJcblxyXG5cclxuXHJcbi8qKlxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIGFuaW1hdGlvbiBmYWRlLWluLWZ3ZFxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqL1xyXG5Aa2V5ZnJhbWVzIGZhZGUtaW4tZndkIHtcclxuICAwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuICAxMDAlIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxufVxyXG5cclxuLmZhZGUtaW4tZndkIHtcclxuICBhbmltYXRpb246IGZhZGUtaW4tZndkIDAuNnMgY3ViaWMtYmV6aWVyKDAuMzkwLCAwLjU3NSwgMC41NjUsIDEuMDAwKSBib3RoO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZsaXBJblkge1xyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg2MDBweCkgcm90YXRlM2QoMCwgMSwgMCwgOTBkZWcpO1xyXG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbjtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG5cclxuICA0MCUge1xyXG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg2MDBweCkgcm90YXRlM2QoMCwgMSwgMCwgLTIwZGVnKTtcclxuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW47XHJcbiAgfVxyXG5cclxuICA2MCUge1xyXG4gICAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg2MDBweCkgcm90YXRlM2QoMCwgMSwgMCwgMTBkZWcpO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcblxyXG4gIDgwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDYwMHB4KSByb3RhdGUzZCgwLCAxLCAwLCAtNWRlZyk7XHJcbiAgfVxyXG5cclxuICB0byB7XHJcbiAgICB0cmFuc2Zvcm06IHBlcnNwZWN0aXZlKDYwMHB4KTtcclxuICB9XHJcbn1cclxuXHJcbi5mbGlwSW5ZIHtcclxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XHJcbiAgYW5pbWF0aW9uLW5hbWU6IGZsaXBJblk7XHJcbn1cclxuXHJcbiIsIi5kZXNpZ25lZC1ieSB7XHJcblxyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHotaW5kZXg6IDIyMjI7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgcmlnaHQ6IDE1cHg7XHJcbiAgICBib3R0b206IDE1cHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAyMXB4O1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IHNjcmVlbjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgc3BhbiB7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICB9XHJcbn1cclxuIiwiQG1lZGlhIHByaW50IHtcclxuICAqIHtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuICB9XHJcbiAgYSxcclxuICBhOnZpc2l0ZWQge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgfVxyXG4gIGFbaHJlZl06YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XHJcbiAgfVxyXG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcclxuICB9XHJcbiAgLmlyIGE6YWZ0ZXIsXHJcbiAgIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcclxuICAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICB9XHJcbiAgcHJlLFxyXG4gIGJsb2NrcXVvdGUge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcclxuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcclxuICB9XHJcbiAgdGhlYWQge1xyXG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG4gIH1cclxuICB0cixcclxuICBpbWcge1xyXG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xyXG4gIH1cclxuICBpbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIEBwYWdlIHtcclxuICAgIG1hcmdpbjogMC41Y207XHJcbiAgfVxyXG4gIHAsXHJcbiAgaDIsXHJcbiAgaDMge1xyXG4gICAgb3JwaGFuczogMztcclxuICAgIHdpZG93czogMztcclxuICB9XHJcbiAgaDIsXHJcbiAgaDMge1xyXG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */
